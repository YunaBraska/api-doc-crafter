openapi: 3.0.1
info:
  title: Health Metrics API
  description: API for tracking user health metrics.
  version: 1.0.0
servers:
- url: https://api.healthmetrics.example.com/v1
  description: Original version of the API
paths:
  /metrics:
    get:
      summary: Retrieve all health metrics
      responses:
        "200":
          description: List of health metrics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Metric"
    post:
      summary: Add a new metric
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Metric"
      responses:
        "201":
          description: Metric added
  /metrics/sync:
    post:
      summary: Synchronize metrics with an external device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                metrics:
                  type: array
                  items:
                    $ref: "#/components/schemas/Metric"
      responses:
        "200":
          description: Synchronization successful
  /metrics/{id}:
    get:
      summary: Retrieve a specific metric
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Metric details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metric"
    delete:
      summary: Delete a metric
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Metric deleted
  /metrics/{id}/trend:
    get:
      summary: Retrieve metric trends over time
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Metric trends
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trend"
  /users:
    get:
      summary: Retrieve all users
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/{id}:
    get:
      summary: Retrieve a specific user
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: Update user information
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated
components:
  schemas:
    Metric:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        type:
          type: string
          enum:
          - calories
          - heart_rate
          - steps
          - weight
        value:
          type: number
    Trend:
      type: object
      properties:
        dataPoints:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              value:
                type: number
        metricId:
          type: string
    User:
      type: object
      properties:
        age:
          type: integer
        email:
          type: string
          format: email
        gender:
          type: string
          enum:
          - female
          - male
          - other
        id:
          type: string
        name:
          type: string
