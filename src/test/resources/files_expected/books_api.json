{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Books API",
    "description" : "API to manage books, authors, and their TEST_VALUE relationships.",
    "termsOfService" : "https://api.books.example.com/terms",
    "contact" : {
      "name" : "API Support",
      "url" : "https://api.books.example.com/support",
      "email" : "support@books.example.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    },
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "Find more info here",
    "url" : "https://api.books.example.com/docs"
  },
  "servers" : [ {
    "url" : "https://api.books.example.com/v1"
  } ],
  "tags" : [ {
    "name" : "Books",
    "description" : "Operations related to books"
  }, {
    "name" : "Authors",
    "description" : "Operations related to authors"
  } ],
  "paths" : {
    "/authors" : {
      "get" : {
        "tags" : [ "Authors" ],
        "summary" : "Retrieve all authors",
        "description" : "Fetch a list of all authors.",
        "responses" : {
          "200" : {
            "description" : "A list of authors",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Authors" ],
        "summary" : "Add a new author",
        "description" : "Adds a new author to the system.",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Author"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Author added successfully",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/books" : {
      "get" : {
        "tags" : [ "Books" ],
        "summary" : "Retrieve all books",
        "description" : "Returns a list of all books available in the system.",
        "responses" : {
          "200" : {
            "description" : "A list of books",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Books" ],
        "summary" : "Add a new book",
        "description" : "Adds a new book to the library.",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Book"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Book created successfully",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/books/{id}" : {
      "get" : {
        "tags" : [ "Books" ],
        "summary" : "Retrieve a specific book",
        "description" : "Fetch details of a book by its unique ID.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Book details retrieved",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Book"
                }
              }
            }
          },
          "404" : {
            "description" : "Book not found",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Books" ],
        "summary" : "Update a book",
        "description" : "Updates information for a specific book.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Book"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Book updated successfully",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "Books" ],
        "summary" : "Delete a book",
        "description" : "Deletes a specific book by its ID.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Book deleted successfully",
            "content" : { }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Author" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "biography" : {
            "type" : "string",
            "description" : "A brief biography of the author"
          },
          "birthDate" : {
            "type" : "string",
            "description" : "Author's date of birth",
            "format" : "date"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Book" : {
        "required" : [ "id", "title" ],
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string"
          },
          "genre" : {
            "type" : "string",
            "description" : "Genre of the book"
          },
          "id" : {
            "type" : "string"
          },
          "publishedDate" : {
            "type" : "string",
            "format" : "date"
          },
          "title" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "X-API-KEY",
        "in" : "header"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}
