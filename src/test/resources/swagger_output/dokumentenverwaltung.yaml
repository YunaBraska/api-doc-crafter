openapi: 3.0.1
info:
  title: Dokumentenverwaltung
  description: "Upload, retrieve and delete documents. Adapt metadata to corresponding\
    \ documents"
  version: 1.0.0
servers:
- url: https://mtp.europace2.de/dokumentenverwaltung
  description: Internal staging server for testing (MTP)
- url: https://www.europace2.de/dokumentenverwaltung
  description: Production (PS)
paths:
  /dokument/*:
    get:
      summary: Download document
      parameters:
      - name: id
        in: query
        description: externerAbruf as Date
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: d
        in: query
        description: externerAbruf as Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: TBD
    head:
      summary: Check for document and retrieve full download URL
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: TBD
  /dokumentBezeichnungAendern/ids:
    post:
      summary: Change Bezeichner for a specific document
      requestBody:
        description: Map including `dokumentId` and `bezeichner`
        content:
          application/json:
            schema:
              type: object
              properties:
                bezeichner:
                  type: string
                dokumentId:
                  type: string
              example:
                dokumentId: abbshh20012834ÃŸ8as
                bezeichner: new-file-name
        required: true
      responses:
        "204":
          description: NO CONTENT
  /dokumente:
    get:
      summary: Retrieve metadata that belongs to a list of documents
      parameters:
      - name: dokumentids
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: vorgangId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dokumente/:
    get:
      summary: Retrieve all metadata for a set of OeffentlicherSchluessel and DokumentId
      parameters:
      - name: id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: schluessel
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
      deprecated: true
    post:
      summary: Upload a file to the Dokumentenverwaltung
      parameters:
      - name: dokumentBezeichnung
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: binary
      - name: logMessage
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pin
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tagDokumentenBibliothek
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: vorgangId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: CREATED
  /dokumente/metadaten:
    post:
      summary: Retrieve all metadata for a set of OeffentlicherSchluessel and DokumentId
      requestBody:
        description: Collection of OeffentlicherSchluessel and DokumentId
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DokumentMetadatenAnfrage'
        required: true
      responses:
        "200":
          description: OK
  /dokumente/{dokumentId}/verfallsdatum:
    delete:
      summary: Remove VerfallsDatum for specific document
      parameters:
      - name: dokumentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dokumente/{schluessel}:
    get:
      summary: Retrieve metadata of a document by OeffentlicherSchluessel
      parameters:
      - name: schluessel
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      summary: Delete a document so that it's no longer accessible
      parameters:
      - name: schluessel
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
    head:
      summary: Check if metadata for a document exist
      parameters:
      - name: schluessel
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /dokumenteapischluessel/{dokumenteId}:
    put:
      summary: Create a DokumenteApiSchluessel
      parameters:
      - name: dokumenteId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Application for creation of a new DokumenteApiSchluessel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DokumenteApiSchluesselErstellenAnfrage'
        required: true
      responses:
        "200":
          description: OK
    delete:
      summary: Delete DokumenteApiSchluessel
      parameters:
      - name: dokumenteId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dokumenten-metadaten/ids:
    get:
      summary: Get a list of metadata
      parameters:
      - name: id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/DokumentId'
      responses:
        "200":
          description: OK
  /download:
    get:
      summary: Frontend redirect by usage without filename
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Should include redirect
    post:
      summary: Frontend redirect by usage without filename
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Should include redirect
    head:
      summary: Frontend redirect by usage without filename
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Should include redirect
  /download/*:
    get:
      summary: Frontend redirect by usage without filename
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Should include redirect
    post:
      summary: Frontend redirect by usage without filename
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Should include redirect
    head:
      summary: Frontend redirect by usage without filename
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Should include redirect
  /downloadwithpin:
    get:
      tags:
      - frontend
      summary: Redirect to document download when using a PIN
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: pin
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: TBD
  /import-from-dokstore:
    post:
      summary: Hand over document from DokStore to Dokumentenverwaltung
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFromDokStoreDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumentId'
  /login:
    get:
      tags:
      - frontend
      summary: opens one of the two login pages
      parameters:
      - name: oeffne
        in: query
        description: parameter to decide which login page to open
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: TBD
    post:
      tags:
      - frontend
      summary: Redirect to document download when using a VorgangID
      parameters:
      - name: oeffne
        in: query
        description: Download URL of the wanted document
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: pin
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: TBD
  /unterlageKopieren/{dokumenteApiSchluessel}:
    post:
      summary: creates a copy of a document
      parameters:
      - name: dokumenteApiSchluessel
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OeffentlicherDokumentenSchluessel'
        "204":
          description: no document found
  /unterlageKopierenFuerId/{dokumentId}:
    post:
      summary: creates a copy of a document
      parameters:
      - name: dokumentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumentId'
        "204":
          description: no document found
  /upload:
    post:
      summary: Upload a file to the Dokumentenverwaltung
      parameters:
      - name: dokumentBezeichnung
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: binary
      - name: pin
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tagDokumentenBibliothek
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: vorgangId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumentSpeichernResponse'
      deprecated: true
  /zip:
    get:
      summary: Download multiple files as a ZIP archive
      parameters:
      - name: ids
        in: query
        description: File name of the ZIP archive - default is `dokumente`
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        description: File name of the ZIP archive - default is `dokumente`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/zip:
              example: null
    post:
      summary: Download multiple files as a ZIP archive
      parameters:
      - name: ids
        in: query
        description: File name of the ZIP archive - default is `dokumente`
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        description: File name of the ZIP archive - default is `dokumente`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/zip:
              example: null
components:
  schemas:
    DocumentFromDokStoreDto:
      type: object
      properties:
        dokStoreDokumentMetadaten:
          $ref: '#/components/schemas/DokStoreDokumentMetadaten'
        verfallsDatum:
          pattern: YYYY-MM-DD
          type: string
          format: date
        vorgangId:
          type: string
    DokStoreDokumentMetadaten:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DokStoreId'
        mimeType:
          type: string
        name:
          type: string
        url:
          type: string
    DokStoreId:
      type: object
      properties:
        value:
          type: string
    DokumenteApiSchluesselErstellenAnfrage:
      type: object
      properties:
        antragId:
          type: array
          items:
            type: string
        vorgangId:
          type: array
          items:
            type: string
      description: "Atleast one of the fields (antragId, vorgangId) is needed in order\
        \ to create a new DokumenteApiSchluessel"
    DokumentId:
      type: object
      properties:
        value:
          type: string
    DokumentMetadatenAnfrage:
      type: object
      properties:
        dokumentIds:
          type: array
          items:
            type: string
        oeffentlicheSchluessel:
          type: array
          items:
            type: string
    DokumentSpeichernResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DokumentId'
        oeffentlicherDokumentenSchluessel:
          $ref: '#/components/schemas/OeffentlicherDokumentenSchluessel'
    OeffentlicherDokumentenSchluessel:
      type: object
      properties:
        value:
          type: string
