<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>berlin.yuna</groupId>
    <artifactId>api-doc-crafter</artifactId>
    <version>2025.05.1292029</version>
    <packaging>jar</packaging>

    <name>api-doc-crafter</name>
    <url>https://github.com/YunaBraska/type-map</url>

    <scm>
        <connection>scm:git:ssh://git@github.com/YunaBraska/api-doc-crafter.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/YunaBraska/api-doc-crafter.git</developerConnection>
        <url>https://github.com/YunaBraska/api-doc-crafter.git</url>
    </scm>

    <developers>
        <developer>
            <name>Yuna Morgenstern</name>
            <email>io@yuna.berlin</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <properties>
        <!-- PROPERTIES -->
        <java-version>21</java-version>
        <project.encoding>UTF-8</project.encoding>
        <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>
        <!-- PROD -->
        <type-map.version>2025.0.12</type-map.version>
        <swagger-parser.version>2.1.27</swagger-parser.version>
        <!-- PROD overrides old version from swagger -->
        <jaxb-runtime.version>4.0.5</jaxb-runtime.version>
        <jakarta.xml.bind-api.version>4.0.2</jakarta.xml.bind-api.version>
        <!-- TEST -->
        <junit.version>5.12.2</junit.version>
        <assertj.version>3.27.3</assertj.version>
        <junit-launcher.version>1.12.2</junit-launcher.version>
        <!-- BUILD -->
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
        <maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>3.2.2</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
        <maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
        <native-image-maven-plugin.version>0.10.2</native-image-maven-plugin.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>berlin.yuna</groupId>
            <artifactId>type-map</artifactId>
            <version>${type-map.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>${swagger-parser.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.activation</groupId>
                    <artifactId>jakarta.activation</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.xml.bind</groupId>
                    <artifactId>jakarta.xml.bind-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mozilla</groupId>
                    <artifactId>rhino</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.googlecode.libphonenumber</groupId>
                    <artifactId>libphonenumber</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.sf.jopt-simple</groupId>
                    <artifactId>jopt-simple</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.errorprone</groupId>
                    <artifactId>error_prone_annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.swagger</groupId>
                    <artifactId>swagger-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>jsr305</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.swagger.core.v3</groupId>
                    <artifactId>swagger-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- SWAGGER RUNTIME DEPENDENCIES -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>${jaxb-runtime.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>${jakarta.xml.bind-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jcl</artifactId>
            <version>1.7.36</version>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit-launcher.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <version>4.8.157</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}-no-dependencies</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <release>${java-version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>berlin.yuna.apidoccrafter.App</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.name}</finalName>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <!--
                        *   Match zero or more characters
                        **  Match zero or more directories
                        ?   Match a single character
                        -->
                        <!--                        <exclude>**/*/config/**/*</exclude>-->
                        <!--                        <exclude>**/*/model/**/*</exclude>-->
                        <!--                        <exclude>**/*/domain/**/*</exclude>-->
                        <exclude>**/*/persistence/**/*</exclude>
                        <exclude>**/*/target/**/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution> <!-- 1 -->
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                        </configuration>
                    </execution>
                    <execution> <!-- 2 -->
                        <id>pre-integration-prepare</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution> <!-- 3 -->
                        <id>report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                    <execution> <!-- 4 -->
                        <id>merged-report-generation</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>${native-image-maven-plugin.version}</version>
                        <configuration>
                            <imageName>${project.name}.native</imageName>
                            <mainClass>berlin.yuna.apidoccrafter.App</mainClass>
                            <buildArgs>
                                <!-- Reduces the image size - Ensures the native image doesn't include the JVM as a fallback option -->
                                <buildArg>--no-fallback</buildArg>
                                <!-- Disables the use of the GraalVM compilation server -->
                                <buildArg>--no-server</buildArg>
                                <!-- Improve startup time - Initialize classes at build time rather than at runtime -->
                                <buildArg>--initialize-at-build-time</buildArg>
                                <!-- Aggressively remove unused code -->
                                <buildArg>--allow-incomplete-classpath</buildArg>
                                <!-- Install exit handlers to properly handle app termination -->
                                <buildArg>--install-exit-handlers</buildArg>
                                <!-- Report unsupported elements at runtime not at build time -->
                                <buildArg>--report-unsupported-elements-at-runtime</buildArg>
                                <!-- epsilon = if you don’t want garbage collection at all -->
                                <!-- serial = if you need basic garbage collection -->
                                <!-- Default Serial garbage collector -->
                                <buildArg>--gc=serial</buildArg>
                                <!-- compatibility = for best compatibility-->
                                <!-- native = for best performance for machine with the same CPU features -->
                                <!-- Defaults to x86-64-v3 on AMD64 and armv8-a on AArch64 -->
                                <!-- <buildArg>-march=native</buildArg>-->
                            </buildArgs>
                            <resourceIncludedPatterns>
                                <!-- Resource folder to include -->
                                <resourceIncludedPattern>.*bin.static.*</resourceIncludedPattern>
                            </resourceIncludedPatterns>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <!-- Needed for including resources -->
                                    <goal>generateResourceConfig</goal>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
